{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardy\\\\Desktop\\\\Marketplace_Project\\\\my-marketplace-app\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./DaisyComponents.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  useEffect(() => {\n    // Check if the user is signed in (you can implement your own logic here)\n    // For example, you can check if there is a token in localStorage\n    const token = localStorage.getItem(\"token\");\n    setIsSignedIn(!!token); // Set isSignedIn based on whether token exists\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar bg-base-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-start\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"btn btn-ghost text-xl\",\n        children: \"Insight | Influx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-center hidden lg:flex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-end\",\n      children: isSignedIn ?\n      /*#__PURE__*/\n      // Conditionally render content based on sign-in status\n      // If user is signed in, show a different content\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Dashboard\",\n          className: \"btn btn-primary\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // Handle sign out\n            // For example, clear token from localStorage\n            localStorage.removeItem(\"token\");\n            setIsSignedIn(false); // Update sign-in status\n          },\n          className: \"btn btn-secondary ml-2\",\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // If user is not signed in, show sign-in button\n      _jsxDEV(Link, {\n        to: \"/SignIn\",\n        className: \"btn btn-primary\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"ES28sB8qKBhxH4u/sxzLxEgNPXw=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Header","_s","isSignedIn","setIsSignedIn","token","localStorage","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","removeItem","_c","$RefreshReg$"],"sources":["C:/Users/hardy/Desktop/Marketplace_Project/my-marketplace-app/src/components/Header.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./DaisyComponents.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if the user is signed in (you can implement your own logic here)\r\n    // For example, you can check if there is a token in localStorage\r\n    const token = localStorage.getItem(\"token\");\r\n    setIsSignedIn(!!token); // Set isSignedIn based on whether token exists\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"navbar bg-base-200\">\r\n      <div className=\"navbar-start\">\r\n        {/* Dropdown menu */}\r\n        {/* ... */}\r\n        <a className=\"btn btn-ghost text-xl\">Insight | Influx</a>\r\n      </div>\r\n      <div className=\"navbar-center hidden lg:flex\">\r\n        {/* Menu links */}\r\n        {/* ... */}\r\n      </div>\r\n      <div className=\"navbar-end\">\r\n        {isSignedIn ? ( // Conditionally render content based on sign-in status\r\n          // If user is signed in, show a different content\r\n          <div>\r\n            <Link to=\"/Dashboard\" className=\"btn btn-primary\">\r\n              Dashboard\r\n            </Link>\r\n            <button\r\n              onClick={() => {\r\n                // Handle sign out\r\n                // For example, clear token from localStorage\r\n                localStorage.removeItem(\"token\");\r\n                setIsSignedIn(false); // Update sign-in status\r\n              }}\r\n              className=\"btn btn-secondary ml-2\"\r\n            >\r\n              Sign Out\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          // If user is not signed in, show sign-in button\r\n          <Link to=\"/SignIn\" className=\"btn btn-primary\">\r\n            Sign In\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,uBAAuB;AAC9B,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CH,aAAa,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKQ,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCT,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAC,QAAA,eAG3BT,OAAA;QAAGQ,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACNb,OAAA;MAAKQ,SAAS,EAAC;IAA8B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGxC,CAAC,eACNb,OAAA;MAAKQ,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBN,UAAU;MAAA;MAAK;MACd;MACAH,OAAA;QAAAS,QAAA,gBACET,OAAA,CAACF,IAAI;UAACgB,EAAE,EAAC,YAAY;UAACN,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAElD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPb,OAAA;UACEe,OAAO,EAAEA,CAAA,KAAM;YACb;YACA;YACAT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;YAChCZ,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;UACxB,CAAE;UACFI,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EACnC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;MAAA;MAEN;MACAb,OAAA,CAACF,IAAI;QAACgB,EAAE,EAAC,SAAS;QAACN,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAE/C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CAjDQD,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAmDf,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}